{"version":3,"sources":["components/Appbar.js","pages/Home.js","pages/School.js","App.js","reportWebVitals.js","index.js"],"names":["Appbar","props","to","className","React","Component","Home","fuzzySearch","e","filteredSearch","target","value","buf","replace","toLowerCase","reg","RegExp","sortedSearch","state","db","filter","school","test","INSTNM","setState","searchText","data","generatePagination","currentPage","schoolData","perPage","pageCount","this","indexSchools","loadSchools","newSchoolData","i","length","push","Math","ceil","upperIndex","lowerIndex","newArr","slice","page","includes","localPage","Pagination","paginationUpperBound","isLargePagination","start","stop","step","pageRange","Array","from","_","map","index","key","onClick","navigatePagination","keys","Object","header","RenderRow","rowKey","pathname","tableData","row","url","type","onChange","placeholder","School","programs","getCurrentSchool","prevProps","prevState","match","params","id","schoolIndex","schoolPrograms","PROGRAMS","actualProgams","programData","progamsLength","about","aboutValues","program","CITY","STABBR","INSTURL","history","createBrowserHistory","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7ff5836.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nclass Appbar extends React.Component {\n\n  constructor(props) {\n      super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return ( \n      <Link to=\"/\"><div className=\"appbar\">\n        <div className=\"appbar--logo-container\"><b>&#9775; Paperless</b>University</div>\n        <div className=\"appbar--links-container\"> <span className=\"appbar--links-li\">By Michael Osei</span> </div>\n      </div></Link>\n    )\n  }\n}\n\nexport default Appbar;","import React from 'react';\nimport Appbar from \"../components/Appbar.js\";\nimport schoolData from \"../data/ma_schools.json\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends React.Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n        data: schoolData,\n        db: schoolData,\n        perPage: 5,\n        currentPage: 1,\n        pageCount: 1,\n        searchText: \"\",\n      };\n  }\n\n  componentDidMount() {\n    this.indexSchools();\n    this.loadSchools();\n  }\n\n  indexSchools(){\n    // Each school needs a unique id\n    let newSchoolData = []\n    for (let i = 0; i < schoolData.length; i++) {\n     let school = schoolData[i];\n     school[\"ID\"] = i;\n     newSchoolData.push(school);\n    }\n    this.setState({data: newSchoolData, db: newSchoolData})\n  }\n\n  loadSchools(){\n    let pageCount = Math.ceil(this.state.db.length / this.state.perPage)\n    this.setState({pageCount: pageCount})\n    this.generatePagination(this.state.currentPage, this.state.db);\n  }\n\n  generatePagination(currentPage, db){\n    // Get current lower bounds and upper bounds\n    let upperIndex = ((this.state.perPage * currentPage) - 1)\n    let lowerIndex = ((upperIndex + 1) - this.state.perPage)\n    \n    // Get items in range\n    let newArr = db.slice(lowerIndex, upperIndex)\n\n    // Update scope data \n    this.setState({data: newArr})\n  }\n\n  navigatePagination(page) {\n      // Handle Edge Cases\n      let operands = [\"<\", \">\", \"...\"]\n      if(operands.includes(page)){\n        let localPage = page;\n        if(page === \"<\" && this.state.currentPage >= 2){\n          localPage = this.state.currentPage - 1\n          this.setState({currentPage: localPage})\n          this.generatePagination(localPage, this.state.db);\n        }else if((page === \">\" || page === \"...\") && this.state.currentPage <= (this.state.pageCount -1)){\n          localPage = this.state.currentPage + 1\n          this.setState({currentPage: localPage})\n          this.generatePagination(localPage, this.state.db);\n        }\n\n      }else{\n        // Base Case\n        this.setState({currentPage: page})\n        this.generatePagination(page, this.state.db);\n      }\n  }\n\n  fuzzySearch = e => {\n    // Full text search\n    let filteredSearch = e.target.value;\n    // Utilize Regex to filter text\n    let buf = \".*\" + filteredSearch.replace(/(.)/g, \"$1.*\").toLowerCase();\n    let reg = new RegExp(buf);\n\n    // Return filtered\n    let sortedSearch = this.state.db.filter(function (school) {\n      return reg.test(school.INSTNM.toLowerCase());\n    });\n\n    this.setState({ searchText: filteredSearch, data: sortedSearch });\n    this.generatePagination(this.state.currentPage, sortedSearch)\n  };\n\n  render() {\n    const range = (start, stop, step) => Array.from({ length: (stop - start) / step + 1}, (_, i) => start + (i * step));\n    \n    const Pagination = () => {\n        let paginationUpperBound = 1;\n        let isLargePagination = false;\n        if(this.state.pageCount > this.state.perPage){\n          paginationUpperBound = this.state.perPage\n          isLargePagination = true\n        }else{\n          paginationUpperBound = this.state.pageCount\n          isLargePagination = false\n        }\n\n        let pageRange = range(1, paginationUpperBound, 1);\n\n        if(isLargePagination){\n          pageRange.push(\"...\")\n          pageRange.push(this.state.pageCount)\n        }\n\n        return pageRange.map((page, index)=>{\n            return <button \n              className={this.state.currentPage == page ? \"container--table-current container--table-flat\" : \" \" + \"container--table-flat\"} \n              key={index} \n              onClick={() => this.navigatePagination(page)}>\n                {page}\n            </button>\n        })\n    }\n\n    let keys = this.state.data.length > 0 ? Object.keys(this.state.data[0]) : [];\n\n    let header = keys.map((key, index)=>{\n        return <th key={key}>{key}</th>\n    });\n\n    const RenderRow = (props) =>{\n      let rowKey = props.rowKey;\n      return props.keys.map((key, index)=>{\n          if(index === 6){\n            return <td key={props.data[key]}><Link to={\"/school/\" + rowKey} ><button className=\"program--button\"> {(props.data[key] && props.data[key].length !== 0) ? props.data[key].length : 0} Programs</button></Link></td>\n          }else if(index === 12){\n            return <td key={props.data[key]}><Link to={{ pathname: \"https://\" + props.data[key] }} target=\"_blank\"><button className=\"program--button\"> VISIT </button></Link></td>\n          }else{\n            return <td key={props.data[key]}>{props.data[key]}</td>\n          }\n      })\n    }\n\n    let tableData = this.state.data.map((row, index)=>{\n      return <tr key={index}><RenderRow rowKey={row[\"ID\"]} url={row[12]} key={index} data={row} keys={keys}/></tr>\n    })\n\n\n    return ( \n      <div className=\"container\">\n          <Appbar />\n\n           <div className=\"container--table\">\n            <h1 className=\"container--table-h1\">University and Schools in Massachusetts</h1>\n            <h2 className=\"container--table-h2\">Exploration by Paperless Parts</h2>\n\n            <div className=\"container--flex\">\n              <input type=\"text\" onChange={this.fuzzySearch} placeholder=\"&#9776;  Search for a university...\" className=\"container--table-search\" value={this.state.searchText} />\n            </div>\n\n            <table>\n              <thead>\n                <tr>{header}</tr>\n              </thead>\n              <tbody>\n                {tableData}\n              </tbody>\n            </table>\n\n            <div className=\"container--flex\">\n              <div className=\"container--table-pagination-position\">{this.state.currentPage + \" of \" + this.state.pageCount }</div>\n              <div className=\"container--table-pagination\">\n                <button className=\"container--table-chevron\" onClick={() => this.navigatePagination(\"<\")}>&#10094;</button>\n                <Pagination page={this.state.pageCount} />\n                <button className=\"container--table-chevron\" onClick={() => this.navigatePagination(\">\")}>&#10095;</button>\n              </div>\n            </div>\n\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React from 'react';\nimport Appbar from \"../components/Appbar.js\";\nimport schoolData from \"../data/ma_schools.json\";\nimport programData from \"../data/programs.json\"; \nimport { Link } from \"react-router-dom\";\n\n\nclass School extends React.Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n        school: null,\n        programs: []\n      };\n  }\n\n  componentDidMount() {\n      this.getCurrentSchool();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.match.params.id !== this.props.match.params.id) {\n      this.getCurrentSchool();\n    }  \n  }\n\n  getCurrentSchool(){\n      let schoolIndex = this.props.match.params.id;\n      let school = schoolData[schoolIndex];\n      let schoolPrograms = school.PROGRAMS;\n      // Generate Programs\n      let actualProgams = []\n      for (let i = 0; i < schoolPrograms.length; i++) {\n        actualProgams.push(programData[schoolPrograms[i]]);\n      }\n      // Base state for schools and programs\n      this.setState({school: school, programs: actualProgams});\n  }\n\n  render() {\n    \n    let keys = this.state.school ? Object.keys(this.state.school) : [];\n    let programs = this.state.programs ? this.state.programs : [];\n    let progamsLength = this.state.programs ? this.state.programs.length : 0;\n\n    let about = keys.map((key, index)=>{\n        if(index != 6){\n            return <div className=\"about--row--item\" key={key}>{key}</div>\n        }\n    });\n\n    let aboutValues = keys.map((key, index)=>{\n        if(index != 6){\n            return <div className=\"about--row--item\" key={key}>{this.state.school[key]}</div>\n        }\n    });\n\n    let actualProgams = programs.map((program, index)=>{\n        return <div className=\"about--row-majors\" key={program}>&#9900; &nbsp; {program}</div>\n    });\n\n    return ( \n      <div className=\"container\">\n          <Appbar />\n           <div className=\"container--table\">\n            <h1 className=\"container--table-h1\">{this.state.school ? this.state.school.INSTNM : \"\"}</h1>\n\n            <div className=\"container--flex\">\n                <button className=\"program--button-school\">{this.state.school ? this.state.school.CITY + \", \" + this.state.school.STABBR  : \"\" }</button>\n                <Link to={{ pathname: \"https://\" + (this.state.school ? this.state.school.INSTURL : \"\" )}} target=\"_blank\"><button className=\"program--button-school\">{this.state.school ? this.state.school.INSTURL : \"\" }</button></Link>\n            </div>\n\n            <hr></hr>\n\n            <div className=\"container--flex\">\n                <div className=\"container--flex-about\">\n                    <h3 className=\"container--table-h3\">&#9777; About </h3>\n                    <div className=\"container--flex\">\n                        <div className=\"about--content about--content-keys\">{about}</div>\n                        <div className=\"about--content about--content-values\">{aboutValues}</div>\n                    </div>\n                </div>\n                <div className=\"container--flex-programs\">\n                    <h3 className=\"container--table-h3\"> {\"(\" + progamsLength + \")\"} Programs </h3>\n                    {actualProgams}\n                </div>\n            </div>\n           </div>\n      </div>\n    )\n  }\n}\n\nexport default School;","import React, { Component, Fragment } from 'react';\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport School from \"./pages/School\";\nimport './App.css';\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"\">\n\t\t\t\t<Router history={history}>\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<main>\n\t\t\t\t\t\t\t<Switch>\n                \t\t\t\t<Route exact path=\"/\" render={(props) => <Home {...props} />} />\n\t\t\t\t\t            <Route path=\"/school/:id\" render={(props) => <School {...props} /> }/>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</Fragment>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}